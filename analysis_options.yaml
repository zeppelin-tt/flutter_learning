analyzer:
  plugins:
    - dart_code_metrics
  # strong-mode:
  # implicit-casts: false
  # implicit-dynamic: false
  errors:
    todo: ignore
    unused_local_variable: warning
    must_be_immutable: error
    invalid_dependency: ignore
    sort_pub_dependencies: ignore

  exclude:
    - .idea/**.*
    - .vscode/**.*
    - pakages/great_list_view/*

linter:
  rules:
    - avoid_setters_without_getters
    - always_use_package_imports
    - avoid_dynamic_calls
    - avoid_empty_else
    - avoid_print
    - avoid_relative_lib_imports
    - avoid_slow_async_io
    - avoid_type_to_string
    - avoid_types_as_parameter_names
    - avoid_web_libraries_in_flutter
    - cancel_subscriptions
    - close_sinks
    - comment_references
    - discarded_futures
    - empty_statements
    - hash_and_equals
    - iterable_contains_unrelated_type
    - list_remove_unrelated_type
    - literal_only_boolean_expressions
    - no_adjacent_strings_in_list
    - no_duplicate_case_values
    - no_logic_in_create_state
    - prefer_void_to_null
    - test_types_in_equals
    - throw_in_finally
    - unnecessary_statements
    - unrelated_type_equality_checks
    - use_build_context_synchronously
    - use_key_in_widget_constructors
    - valid_regexps
    - always_declare_return_types
    - annotate_overrides
    - avoid_bool_literals_in_conditional_expressions
    - avoid_catches_without_on_clauses
    - avoid_catching_errors
    - avoid_classes_with_only_static_members
    - avoid_escaping_inner_quotes
    - avoid_field_initializers_in_const_classes
    - avoid_final_parameters
    - avoid_function_literals_in_foreach_calls
    - avoid_implementing_value_types
    - avoid_init_to_null
    - avoid_multiple_declarations_per_line
    - avoid_null_checks_in_equality_operators
    - avoid_positional_boolean_parameters
    - avoid_private_typedef_functions
    - avoid_redundant_argument_values
    - avoid_renaming_method_parameters
    - avoid_returning_null
    - avoid_returning_null_for_void
    - avoid_returning_this
    - avoid_return_types_on_setters
    - avoid_shadowing_type_parameters
    - avoid_single_cascade_in_expression_statements
    - avoid_types_on_closure_parameters
    - avoid_unnecessary_containers
    - avoid_unused_constructor_parameters
    - avoid_void_async
    - await_only_futures
    - camel_case_extensions
    - camel_case_types
    - cascade_invocations
    - cast_nullable_to_non_nullable
    - combinators_ordering
    - conditional_uri_does_not_exist
    - constant_identifier_names
    - curly_braces_in_flow_control_structures
    - deprecated_consistency
    - directives_ordering
    - empty_catches
    - empty_constructor_bodies
    - eol_at_end_of_file
    - exhaustive_cases
    - file_names
    - implementation_imports
    - join_return_with_assignment
    - join_return_with_assignment
    - leading_newlines_in_multiline_strings
    - library_names
    - library_prefixes
    - library_private_types_in_public_api: ignore
    - missing_whitespace_between_adjacent_strings
    - non_constant_identifier_names
    - no_leading_underscores_for_library_prefixes
    - no_leading_underscores_for_local_identifiers
    - noop_primitive_operations
    - no_runtimeType_toString
    - null_check_on_nullable_type_parameter
    - null_closures
    - omit_local_variable_types
    - one_member_abstracts
    - only_throw_errors
    - overridden_fields
    - package_api_docs
    - package_prefixed_library_names
    - parameter_assignments
    - prefer_adjacent_string_concatenation
    - prefer_asserts_in_initializer_lists
    - prefer_asserts_with_message
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_const_literals_to_create_immutables
    - prefer_constructors_over_static_methods
    - prefer_contains
    - prefer_double_quotes: ignore
    - prefer_equal_for_default_values
    - prefer_expression_function_bodies: ignore
    - prefer_final_fields
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_for_elements_to_map_fromIterable
    - prefer_function_declarations_over_variables
    - prefer_generic_function_type_aliases
    - prefer_if_elements_to_conditional_expressions
    - prefer_if_null_operators
    - prefer_initializing_formals
    - prefer_inlined_adds
    - prefer_interpolation_to_compose_strings
    - prefer_int_literals
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_iterable_whereType
    - prefer_mixin
    - prefer_null_aware_operators
    - prefer_null_aware_method_calls
    - prefer_single_quotes
    - prefer_spread_collections
    - prefer_typing_uninitialized_variables
    - provide_deprecation_message
    - public_member_api_docs: ignore
    - recursive_getters
    - sized_box_for_whitespace
    - sized_box_shrink_expand
    - slash_for_doc_comments
    - sort_child_properties_last
    - sort_unnamed_constructors_first
    - tighten_type_of_initializing_formals
    - type_annotate_public_apis
    - type_init_formals
    - unawaited_futures
    - unnecessary_await_in_return
    - unnecessary_brace_in_string_interps
    - unnecessary_const
    - unnecessary_constructor_name
    - unnecessary_new
    - unnecessary_null_aware_assignments
    - unnecessary_null_in_if_null_operators
    - unnecessary_getters_setters
    - unnecessary_lambdas
    - unnecessary_late
    - unnecessary_nullable_for_final_variable_declarations
    - unnecessary_null_aware_operator_on_extension_on_nullable
    - unnecessary_null_checks
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_raw_strings
    - unnecessary_string_escapes
    - unnecessary_string_interpolations
    - unnecessary_this
    - unnecessary_to_list_in_spreads
    - unreachable_from_main
    - use_colored_box
    - use_decorated_box
    - use_enums
    - use_full_hex_values_for_flutter_colors
    - use_function_type_syntax_for_parameters
    - use_if_null_to_convert_nulls_to_bools
    - use_is_even_rather_than_modulo
    - use_named_constants
    - use_rethrow_when_possible
    - use_raw_strings
    - use_string_buffers
    - use_super_parameters
    - use_string_in_part_of_directives
    - use_to_and_as_if_applicable
    - void_checks
    - depend_on_referenced_packages
    - package_names
    - secure_pubspec_urls

dart_code_metrics:
  metrics:
    cyclomatic-complexity: 20
    maximum-nesting-level: 5
    number-of-parameters: 5
    source-lines-of-code: 30
  metrics-exclude:
    - test/**
  anti-patterns:
    - long-method:
        max-length: 30
        severity: style
    - long-parameter-list: ignore
  rules:
    - member-ordering-extended:
        order:
          - public-static-fields
          - private-static-fields
          - public-static-methods
          - private-static-methods

          - public-const-fields
          - private-const-fields
          - public-final-fields
          - public-final-late-fields
          - public-late-fields
          - public-fields
          - protected-final-fields
          - protected-final-late-fields
          - protected-late-fields
          - protected-fields
          - private-final-fields
          - private-final-late-fields
          - private-late-fields
          - private-fields

          - constructors
          - named-constructors
          - factory-constructors

          - public-getters
          - public-setters
          - private-getters
          - private-setters

          - overriden-methods

          - init-state-method
          - did-change-dependencies-method
          - did-update-widget-method
          - build-method
          - dispose-method

          - public-methods
          - protected-methods
          - private-methods

    - prefer-trailing-comma:
        severity: style
    - avoid-collection-methods-with-unrelated-types
    - avoid-duplicate-exports
    - avoid-dynamic
    - avoid-global-state
    - avoid-missing-enum-constant-in-map
    - avoid-nested-conditional-expressions
    - avoid-non-null-assertion:
        exclude:
          - "**/components/**"
    - avoid-throw-in-catch-block
    - avoid-unnecessary-type-assertions
    - avoid-unnecessary-type-casts
    - avoid-unrelated-type-assertions
    - avoid-unused-parameters
    - binary-expression-operand-order
    - double-literal-format
    - no-boolean-literal-compare
    - no-empty-block
    - no-equal-then-else
    - no-object-declaration
    - prefer-commenting-analyzer-ignores
    - prefer-correct-identifier-length:
        min-length: 3
        max-length: 40
    - prefer-correct-type-name:
        min-length: 3
        max-length: 40
    - prefer-enums-by-name
    - prefer-first
    - prefer-last
    - prefer-immediate-return
    - prefer-match-file-name
    - prefer-conditional-expressions
    - prefer-trailing-comma
    - always-remove-listener
    - avoid-border-all
    - avoid-returning-widgets
    - avoid-shrink-wrap-in-lists
    - avoid-unnecessary-setstate
    - avoid-use-expanded-as-spacer
    - avoid-wrapping-in-padding
    - prefer-const-border-radius
    - prefer-correct-edge-insets-constructor
    - prefer-extracting-callbacks:
        allowed-line-count: 20
        ignored-named-arguments:
          - List.generate
          - generate
          - generator
    - prefer-single-widget-per-file:
        ignore-private-widgets: true
    - no-magic-number: ignore # TODO: enable later, when all sizes will be variables
    - prefer-moving-to-variable: ignore
      # TODO: enable when magic number is resolved - allowed-duplicated-chains: 3
    ## использовать в случае если необходимо подсветить общую переиспользуемую функциональность
    - ban-name: ignore
    ## можно настроить форматирование комментов
    - format-comment: ignore
    - newline-before-return: ignore
    - avoid-ignoring-return-values: ignore
    - no-equal-arguments: ignore
